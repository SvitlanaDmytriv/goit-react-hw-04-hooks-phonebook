{"version":3,"sources":["component/ContactList/ContactList.module.css","component/ContactFilter/ContactFilter.module.css","component/ContactForm/ContactForm.module.css","component/ContactForm/ContactForm.js","component/ContactFilter/ContactFilter.js","component/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","nameInputId","shortid","generate","phoneInputId","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","addContact","reset","this","className","s","form","onSubmit","label","htmlFor","input","type","id","pattern","title","required","onChange","btn","Component","ContactFilter","ContactList","contactsList","deleteContact","list","map","listItem","onClick","App","contacts","filterValue","data","contact","toLocaleLowerCase","includes","alert","newContact","prevState","filter","сhangeFilter","filterContacts","normalizedFilter","toLowerCase","localStorage","setItem","JSON","stringify","parseContacts","parse","getItem","visibleFilter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a145111a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1D1GA\",\"listItem\":\"ContactList_listItem__2KW3E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactFilter_label__2AK4S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2iOuO\",\"label\":\"ContactForm_label__11fhh\",\"input\":\"ContactForm_input__78vwW\",\"btn\":\"ContactForm_btn__11vzR\"};","import { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n  phoneInputId = shortid.generate();\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.addContact({ ...this.state });\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n  render() {\r\n    const { nameInputId, phoneInputId, handleChange, handleSubmit } = this;\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={s.form} onSubmit={handleSubmit}>\r\n        <label className={s.label} htmlFor={nameInputId}>\r\n          Name\r\n        </label>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          id={nameInputId}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <label className={s.label} htmlFor={phoneInputId}>\r\n          Number\r\n        </label>\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          id={phoneInputId}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <button className={s.btn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactFilter.module.css';\r\n\r\nfunction ContactFilter({ value, onChange }) {\r\n  return (\r\n    <label>\r\n      <span className={s.label}>Find contacts by name</span>\r\n      <input type=\"text\" value={value} onChange={onChange}></input>\r\n    </label>\r\n  );\r\n}\r\n\r\nContactFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default ContactFilter;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\nfunction ContactList({ contactsList, deleteContact }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contactsList.map(({ name, number, id }) => (\r\n        <li key={id} className={s.listItem}>\r\n          <p>\r\n            {name} : {number}\r\n          </p>\r\n\r\n          <button type=\"submit\" onClick={() => deleteContact(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contactsList: PropTypes.array,\r\n  deleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import './App.css';\r\n\r\nimport { Component } from 'react';\r\nimport shortid from 'shortid';\r\n\r\nimport ContactForm from './component/ContactForm/ContactForm';\r\nimport ContactFilter from './component/ContactFilter/ContactFilter';\r\nimport ContactList from './component/ContactList/ContactList';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filterValue: '',\r\n  };\r\n  componentDidUpdate(prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const parseContacts = JSON.parse(localStorage.getItem('contacts'));\r\n    if (parseContacts) {\r\n      this.setState({ contacts: parseContacts });\r\n    }\r\n  }\r\n\r\n  addContact = data => {\r\n    const contactСomparison = this.state.contacts\r\n      .map(contact => contact.name.toLocaleLowerCase())\r\n      .includes(data.name.toLocaleLowerCase());\r\n\r\n    if (contactСomparison) {\r\n      alert(`${data.name} is already in contacts`);\r\n    } else {\r\n      const newContact = { ...data, id: shortid.generate() };\r\n      this.setState(prevState => ({\r\n        contacts: [...prevState.contacts, newContact],\r\n      }));\r\n    }\r\n  };\r\n\r\n  deleteContact = id => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  сhangeFilter = e => {\r\n    const { value } = e.target;\r\n    this.setState({ filterValue: value });\r\n  };\r\n\r\n  filterContacts = () => {\r\n    const { filterValue, contacts } = this.state;\r\n    const normalizedFilter = filterValue.toLowerCase();\r\n    const visibleContacts = contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n    return visibleContacts;\r\n  };\r\n\r\n  render() {\r\n    const { addContact, сhangeFilter, deleteContact } = this;\r\n    const { filterValue } = this.state;\r\n    const visibleFilter = this.filterContacts();\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Phonebook</h1>\r\n        <ContactForm addContact={addContact} />\r\n        <h2>Contacts</h2>\r\n        <ContactFilter value={filterValue} onChange={сhangeFilter} />\r\n        <ContactList\r\n          contactsList={visibleFilter}\r\n          deleteContact={deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}